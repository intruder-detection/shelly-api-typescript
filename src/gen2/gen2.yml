openapi: 3.0.0
info:
  title: Shelly Gen 2 Device HTTP API
  version: 1.0.0
servers:
  - url: https://shelly-api-docs.shelly.cloud/gen2/
paths:
  # WiFi Methods
  /rpc/WiFi.GetConfig:
    get:
      tags:
        - Wifi Methods
      summary: Get Wifi Configuration
      description: Get the Wifi Configuration of the device. [Docs](https://shelly-api-docs.shelly.cloud/gen2/ComponentsAndServices/WiFi#wifigetstatus)
      responses:
        '200':
          description: Get Wifi Configuration response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WifiConfigResponse'
  /rpc/WifiMethods.SetConfig:
    get:
      tags:
        - Wifi Methods
      summary: Set WiFi configuration
      description: Set WiFi configuration [Docs](https://shelly-api-docs.shelly.cloud/gen2/ComponentsAndServices/WiFi#wifisetconfig)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                config:
                  $ref: '#/components/schemas/WifiConfigForSetConfiguration'
              example:
                {
                  config: {
                    ap: {
                      enable: false,
                    },
                    sta: {
                      pass: '<WIFI_PASSWORD>',
                      is_open: false,
                      enable: true,
                      ssid: '<WIFI_SSID>',
                      ipv4mode: 'dhcp',
                    }
                  }
                }
      responses:
        '200':
          description: Set WiFi configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WifiSetConfigResponse'
  /rpc/WiFi.GetStatus:
    get:
      tags:
        - Wifi Methods
      summary: Get Wifi Status
      description: Get the Wifi Status of the device. [Docs](https://shelly-api-docs.shelly.cloud/gen2/ComponentsAndServices/WiFi#wifigetconfig-example)
      responses:
        '200':
          description: Get Wifi Status response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WifiStatusResponse'
  /rpc/Wifi.ListAPClients:
    get:
      tags:
        - Wifi Methods
      summary: List WiFi AP Clients
      description: List WiFi AP Clients of the device. [Docs](https://shelly-api-docs.shelly.cloud/gen2/ComponentsAndServices/WiFi#wifilistapclients)
      responses:
        '200':
          description: WiFi List AP Clients response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WifiListAPClientsResponse'
  /rpc/WifiMethods.Scan:
    get:
      tags:
        - Wifi Methods
      summary: List of WiFi networks
      description: List of WiFi networks scanned. [Docs](https://shelly-api-docs.shelly.cloud/gen2/ComponentsAndServices/WiFi#wifiscan)
      responses:
        '200':
          description: List of WiFi networks scanned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WifiScanResponse'

  # ShellyMethods
  /rpc/Shelly.GetStatus:
    get:
      tags:
        - Shelly Methods
      summary: Get Shelly device status
      description: Get Shelly device status. [Docs](https://shelly-api-docs.shelly.cloud/gen2/ComponentsAndServices/Shelly#shellygetstatus)
      responses:
        '200':
          description: Get Shelly device status response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStatusResponse'

components:
  schemas:
    # ---------------------------------- WiFiMethods
    # WiFi.GetStatus
    WifiStatusResponse:
      properties:
        id:
          type: number
        src:
          type: string
        dst:
          type: string
        result:
          $ref: '#/components/schemas/WifiStatus'
      required:
        - id
        - src
        - dst
        - result
      additionalProperties: false
      title: WifiStatusResponse
      example:
        {
          "id": 1,
          "src": "shellyblugw-a842e33f71f0",
          "dst": "my_self",
          "result": {
            "sta_ip": null,
            "status": "connecting",
            "ssid": null,
            "rssi": 0
          }
        }
    WifiStatus:
      properties:
        sta_ip:
          nullable: true
          type: string
        status:
          type: string
        ssid:
          nullable: true
          type: string
        rssi:
          type: number
        ap_client_count:
          type: number
      required:
        - sta_ip
        - status
        - ssid
        - rssi
        - ap_client_count
      additionalProperties: false
      title: WifiStatus
      type: object

    # WiFi.GetConfig
    WifiConfigResponse:
      properties:
        id:
          type: number
        src:
          type: string
        dst:
          type: string
        result:
          $ref: '#/components/schemas/WifiConfig'
      required:
        - id
        - src
        - dst
        - result
      additionalProperties: false
      title: WifiConfigResponse
      example:
        {
          "id": 1,
          "src": "shellyblugw-a842e33f71f0",
          "dst": "my_self",
          "result": {
            "ap": {
              "ssid": "ShellyBluGw-A842E33F71F0",
              "is_open": true,
              "enable": true,
              "range_extender": {
                "enable": false
              }
            },
            "sta": {
              "ssid": "HUAWEI-B315-9985",
              "is_open": false,
              "enable": true,
              "ipv4mode": "dhcp",
              "ip": null,
              "netmask": null,
              "gw": null,
              "nameserver": null
            },
            "sta1": {
              "ssid": "limao",
              "is_open": true,
              "enable": false,
              "ipv4mode": "dhcp",
              "ip": null,
              "netmask": null,
              "gw": null,
              "nameserver": null
            },
            "roam": {
              "rssi_thr": -80,
              "interval": 60
            }
          }
        }
    WifiConfig:
      properties:
        ap:
          $ref: '#/components/schemas/WifiAccessPoint'
        sta:
          $ref: '#/components/schemas/WifiStation'
        sta1:
          $ref: '#/components/schemas/WifiStation'
        roam:
          $ref: '#/components/schemas/WifiRoaming'
      required:
        - ap
        - sta
        - sta1
        - roam
      additionalProperties: false
      title: WifiConfig
      type: object
    WifiAccessPointWithPass:
      properties:
        pass:
          type: string
      required:
        - pass
      additionalProperties: false
      title: WifiAccessPointWithPass
      type: object
    WifiRoaming:
      properties:
        rssi_thr:
          type: number
        interval:
          type: number
      required:
        - rssi_thr
        - interval
      additionalProperties: false
      title: WifiRoaming
      type: object
    WifiStationWithPass:
      properties:
        ssid:
          nullable: true
          type: string
        is_open:
          type: boolean
        enable:
          type: boolean
        ipv4mode:
          enum:
            - dhcp
            - static
          type: string
        ip:
          type: string
        netmask:
          type: string
        gw:
          type: string
        nameserver:
          type: string
        pass:
          type: string
      required:
        - ssid
        - is_open
        - enable
        - ipv4mode
        - ip
        - netmask
        - gw
        - nameserver
        - pass
      additionalProperties: false
      title: WifiStationWithPass, WifiStation
      type: object
    WifiAccessPoint:
      properties:
        ssid:
          type: string
        is_open:
          type: boolean
        enable:
          type: boolean
        range_extender:
          type: object
          properties:
            enable:
              type: boolean
      required:
        - ssid
        - is_open
        - enable
        - range_extender
      additionalProperties: false
      title: WifiAccessPoint
      type: object
    WifiStation:
      properties:
        ssid:
          nullable: true
          type: string
        is_open:
          type: boolean
        enable:
          type: boolean
        ipv4mode:
          enum:
            - dhcp
            - static
          type: string
        ip:
          type: string
        netmask:
          type: string
        gw:
          type: string
        nameserver:
          type: string
      required:
        - ssid
        - is_open
        - enable
        - ipv4mode
        - ip
        - netmask
        - gw
        - nameserver
      additionalProperties: false
      title: WifiStation
      type: object

    # Wifi.ListAPClients
    WifiListAPClientsResponse:
      properties:
        id:
          type: number
        src:
          type: string
        dst:
          type: string
        result:
          $ref: '#/components/schemas/ListAPClients'
      required:
        - id
        - src
        - dst
        - result
      additionalProperties: false
      title: WifiListAPClientsResponse
    ListAPClients:
      properties:
        ts:
          nullable: true
          type: number
        ap_clients:
          items:
            $ref: '#/components/schemas/ApClient'
          type: array
      required:
        - ts
        - ap_clients
      additionalProperties: false
      title: ListAPClients
      type: object
    ApClient:
      properties:
        mac:
          type: string
        ip:
          type: string
        ip_static:
          type: boolean
        mport:
          type: number
        since:
          type: number
      required:
        - mac
        - ip
        - ip_static
        - mport
        - since
      additionalProperties: false
      title: ApClient
      type: object

    # WifiMethods.Scan
    WifiScanResponse:
      properties:
        id:
          type: number
        src:
          type: string
        dst:
          type: string
        result:
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/WifiScan'
      required:
        - id
        - src
        - dst
        - result
      additionalProperties: false
      title: WifiScanResponse
      example:
        {
          "id": 1,
          "src": "shellyblugw-a842e33f71f0",
          "dst": "my_self",
          "result": {
            "results": [
              {
                "ssid": "HOMERUI",
                "bssid": "ca:9f:51:49:9a:7a",
                "auth": 3,
                "channel": 6,
                "rssi": -50
              },
              {
                "ssid": "HOMERUI",
                "bssid": "ca:9f:51:4a:7b:02",
                "auth": 3,
                "channel": 11,
                "rssi": -60
              },
              {
                "ssid": "HOMERUI",
                "bssid": "ca:9f:51:49:99:90",
                "auth": 3,
                "channel": 6,
                "rssi": -79
              },
              {
                "ssid": "MEO-99F992",
                "bssid": "9c:97:26:98:f8:59",
                "auth": 4,
                "channel": 6,
                "rssi": -91
              },
              {
                "ssid": "HOMERUI",
                "bssid": "aa:95:7f:61:70:6c",
                "auth": 3,
                "channel": 1,
                "rssi": -92
              },
              {
                "ssid": "MEO-WiFi",
                "bssid": "9e:97:26:98:f8:5a",
                "auth": 0,
                "channel": 6,
                "rssi": -92
              }
            ]
          }
        }
    WifiScan:
      properties:
        ssid:
          title: WifiScan.ssid
          nullable: true
          type: string
        bssid:
          title: WifiScan.bssid
          nullable: true
          type: string
        auth:
          title: WifiScan.auth
          type: number
        channel:
          title: WifiScan.channel
          type: number
        rssi:
          title: WifiScan.rssi
          type: number
      required:
        - ssid
        - bssid
        - auth
        - channel
        - rssi
      additionalProperties: false
      title: WifiScan
      type: object

    # WifiMethods.SetConfig
    WifiSetConfigResponse:
      properties:
        id:
          type: number
        src:
          type: string
        dst:
          type: string
        result:
          properties:
            restart_required:
              type: boolean
      required:
        - id
        - src
        - dst
        - result
      additionalProperties: false
      title: WifiSetConfigResponse
      example:
        {
          "id": 1,
          "src": "shellyblugw-a842e33f71f0",
          "dst": "my_self",
          "result": {
            "restart_required": false
          }
        }
    # Body
    WifiConfigForSetConfiguration:
      properties:
        ap:
          $ref: '#/components/schemas/WifiAccessPoint'
        sta:
          $ref: '#/components/schemas/WifiStation'
        sta1:
          $ref: '#/components/schemas/WifiStation'
        roam:
          $ref: '#/components/schemas/WifiRoaming'
      required:
        - ap
        - sta
        - sta1
        - roam
      additionalProperties: false
      title: WifiConfigForSetConfiguration
      type: object


    # ---------------------------------- ShellyMethods
    # ShellyMethods.GetStatus
    GetStatusResponse:
      properties:
        id:
          type: number
        src:
          type: string
        dst:
          type: string
        result:
          $ref: '#/components/schemas/GetStatusResult'
      required:
        - id
        - src
        - dst
        - result
      additionalProperties: false
      title: WifiConfigResponse
      example:
        {
          "id": 1,
          "src": "shellyblugw-a842e33f71f0",
          "dst": "my_self",
          "result": {
            "ble": {
              "dev_list": "ble_devices.json"
            },
            "cloud": {
              "connected": true
            },
            "mqtt": {
              "connected": true
            },
            "script:1": {
              "id": 1,
              "running": true,
              "mem_used": 2870,
              "mem_peak": 4284,
              "mem_free": 22330
            },
            "script:2": {
              "id": 2,
              "running": false,
              "mem_free": 22330
            },
            "sys": {
              "mac": "A842E33F71F0",
              "restart_required": false,
              "time": "12:57",
              "unixtime": 1718366254,
              "uptime": 57738,
              "ram_size": 261248,
              "ram_free": 106704,
              "fs_size": 458752,
              "fs_free": 131072,
              "cfg_rev": 66,
              "kvs_rev": 51,
              "schedule_rev": 2,
              "webhook_rev": 12,
              "available_updates": {
                "stable": {
                  "version": "1.3.2"
                }
              },
              "reset_reason": 3
            },
            "wifi": {
              "sta_ip": "192.168.1.10",
              "status": "got ip",
              "ssid": "HOMERUI",
              "rssi": -55
            },
            "ws": {
              "connected": false
            }
          }
        }
    GetStatusResult:
      properties:
        ble:
          $ref: '#/components/schemas/Ble'
        cloud:
          $ref: '#/components/schemas/Cloud'
        mqtt:
          $ref: '#/components/schemas/Cloud'
        sys:
          $ref: '#/components/schemas/SystemStatus'
        wifi:
          $ref: '#/components/schemas/Wifi'
        ws:
          $ref: '#/components/schemas/Cloud'
      required:
        - ble
        - cloud
        - mqtt
        - sys
        - wifi
        - ws
      additionalProperties: false
      title: GetStatusResult
      type: object
    Ble:
      properties:
        dev_list:
          type: string
      required:
        - dev_list
      additionalProperties: false
      title: Ble
      type: object
    Cloud:
      properties:
        connected:
          type: boolean
      required:
        - connected
      additionalProperties: false
      title: Cloud
      type: object
    Wifi:
      properties:
        sta_ip:
          type: string
        status:
          type: string
        ssid:
          type: string
        rssi:
          type: number
      required:
        - sta_ip
        - status
        - ssid
        - rssi
      additionalProperties: false
      title: Wifi
      type: object
    SystemStatus:
      properties:
        mac:
          type: string
        restart_required:
          type: boolean
        time:
          type: string
        unixtime:
          type: number
        uptime:
          type: number
        ram_size:
          type: number
        ram_free:
          type: number
        fs_size:
          type: number
        fs_free:
          type: number
        cfg_rev:
          type: number
        kvs_rev:
          type: number
        schedule_rev:
          type: number
        webhook_rev:
          type: number
        available_updates:
          type: object
      required:
        - mac
        - restart_required
        - time
        - unixtime
        - uptime
        - ram_size
        - ram_free
        - fs_size
        - fs_free
        - cfg_rev
        - kvs_rev
        - schedule_rev
        - webhook_rev
        - available_updates
      additionalProperties: false
      title: SystemStatus
      type: object

